{
  "uid" : "6282f66e4794c457",
  "name" : "test_registration",
  "fullName" : "test.test_TC02_Regisztracio.TestRegistrationConduit#test_registration",
  "historyId" : "bb6b4ffb1236d9fc1c2dd35ceb784dcc",
  "time" : {
    "start" : 1628543439810,
    "stop" : 1628543441456,
    "duration" : 1646
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\n  - Your registration was successful!\n  + Email already taken.",
  "statusTrace" : "self = <test_TC02_Regisztracio.TestRegistrationConduit object at 0x7f733fbc8940>\n\n    def test_registration(self):\n    \n        alphabet = string.ascii_lowercase\n        email = 'A'.join((secrets.choice(alphabet) for i in range(5))).join(\"@gmail.com\")\n        self.driver.find_element_by_xpath('/html/body//a[contains(@href,\"register\")]').click()\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Username\"]').send_keys(\"A11\")\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Email\"]').send_keys(\"A11111@gmail.com\")\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Password\"]').send_keys(\"Tananiko-11\")\n        self.driver.find_element_by_xpath('//button[normalize-space()=\"Sign up\"]').click()\n    \n        WebDriverWait(\n            self.driver, 20).until(\n            EC.visibility_of_element_located((By.XPATH, \"//button[normalize-space()='OK']\"))\n        )\n    \n        welcome = self.driver.find_element_by_xpath(\"//div[@class= 'swal-text']\")\n>       assert welcome.text == \"Your registration was successful!\"\nE       AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\nE         - Your registration was successful!\nE         + Email already taken.\n\ntest/test_TC02_Regisztracio.py:41: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\n  - Your registration was successful!\n  + Email already taken.",
    "statusTrace" : "self = <test_TC02_Regisztracio.TestRegistrationConduit object at 0x7f733fbc8940>\n\n    def test_registration(self):\n    \n        alphabet = string.ascii_lowercase\n        email = 'A'.join((secrets.choice(alphabet) for i in range(5))).join(\"@gmail.com\")\n        self.driver.find_element_by_xpath('/html/body//a[contains(@href,\"register\")]').click()\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Username\"]').send_keys(\"A11\")\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Email\"]').send_keys(\"A11111@gmail.com\")\n        self.driver.find_element_by_xpath('//input[@placeholder=\"Password\"]').send_keys(\"Tananiko-11\")\n        self.driver.find_element_by_xpath('//button[normalize-space()=\"Sign up\"]').click()\n    \n        WebDriverWait(\n            self.driver, 20).until(\n            EC.visibility_of_element_located((By.XPATH, \"//button[normalize-space()='OK']\"))\n        )\n    \n        welcome = self.driver.find_element_by_xpath(\"//div[@class= 'swal-text']\")\n>       assert welcome.text == \"Your registration was successful!\"\nE       AssertionError: assert 'Email already taken.' == 'Your registr...s successful!'\nE         - Your registration was successful!\nE         + Email already taken.\n\ntest/test_TC02_Regisztracio.py:41: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "607a3ab42507f5bb",
      "name" : "log",
      "source" : "607a3ab42507f5bb.txt",
      "type" : "text/plain",
      "size" : 344
    }, {
      "uid" : "8b1f032476ea3a38",
      "name" : "stderr",
      "source" : "8b1f032476ea3a38.txt",
      "type" : "text/plain",
      "size" : 215
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_TC02_Regisztracio"
  }, {
    "name" : "subSuite",
    "value" : "TestRegistrationConduit"
  }, {
    "name" : "host",
    "value" : "fv-az83-224"
  }, {
    "name" : "thread",
    "value" : "3873-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_TC02_Regisztracio"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6282f66e4794c457.json",
  "parameterValues" : [ ]
}